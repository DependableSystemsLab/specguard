FROM nvidia/vulkan:1.1.121-cuda-10.1--ubuntu18.04

RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com --recv-keys A4B469963BF863CC

# Allow using GUI apps.
ENV TERM=xterm
ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update \
 && apt-get install -y tzdata \
 && ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime \
 && dpkg-reconfigure --frontend noninteractive tzdata \
 && apt-get clean

# Some useful tools.
RUN apt-get update \
 && apt-get install --no-install-recommends -y \
        software-properties-common \
 && add-apt-repository ppa:ubuntu-toolchain-r/test -y \
 && apt-get update \
 && apt-get install --no-install-recommends -y \
        build-essential sudo \
        cmake \
        gdb \
        git \
        vim \
        tmux \
        wget \
        curl \
        less \
        htop \
        python3-pip \
        python-tk \
        libsm6 libxext6 \
        libboost-all-dev zlib1g-dev \
        lsb-release \
        gcc-10 g++-10 \
 && apt-get clean \
 && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 100 \
 && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 100


# Copied from
# https://github.com/carla-simulator/carla/blob/78e7ea11306ca164fb664ec74d2224f2e1d01923/Util/Docker/Release.Dockerfile#L15
RUN packages='libsdl2-2.0-0 libsdl2-dev xserver-xorg libvulkan1 libvulkan-dev' \
       && apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y $packages --no-install-recommends \
       && VULKAN_API_VERSION=`dpkg -s libvulkan1 | grep -oP 'Version: [0-9|\.]+' | grep -oP '[0-9|\.]+'` && \
	mkdir -p /etc/vulkan/icd.d/ && \
	echo \
	"{\
		\"file_format_version\" : \"1.0.0\",\
		\"ICD\": {\
			\"library_path\": \"libGLX_nvidia.so.0\",\
			\"api_version\" : \"${VULKAN_API_VERSION}\"\
		}\
	}" > /etc/vulkan/icd.d/nvidia_icd.json \
	&& rm -rf /var/lib/apt/lists/*

# Add a user with the same user_id and group_id as the user outside the container.
ARG user_id=1001
ARG group_id=100
ARG user_name=airsim_user
ARG group_name=users

# The "users" group with id=100 is already in the system.
# For other group setting, uncomment the following.
# RUN groupadd -g ${group_id} ${group_name}
ENV USERNAME ${user_name}
RUN useradd --uid ${user_id} --gid ${group_id} -ms /bin/bash $USERNAME \
 && echo "$USERNAME:$USERNAME" | chpasswd \
 && adduser $USERNAME sudo \
 && echo "$USERNAME ALL=NOPASSWD: ALL" >> /etc/sudoers.d/$USERNAME \
 && adduser $USERNAME audio \ 
 && adduser $USERNAME video
 
# Make sure that everything is up to date and install necessary libraries
RUN apt update
RUN apt install -y python3.8
RUN python3.8 -m pip install pip --upgrade
RUN ln -sf /usr/bin/python3.8 /usr/bin/python3

RUN python3 -m pip install numpy==1.23.5
RUN python3 -m pip install setuptools==74.1.2
RUN python3 -m pip install tensorflow==2.12.0
RUN python3 -m pip install gym==0.26.2
RUN python3 -m pip install geopy==2.3.0
RUN python3 -m pip install Pillow==9.5.0
RUN python3 -m pip install msgpack-rpc-python==0.4.1
RUN python3 -m pip install airsim==1.8.1
RUN python3 -m pip install pyproj==3.5.0
RUN python3 -m pip install dronekit==2.9.2
RUN python3 -m pip install kconfiglib==14.1.0
RUN python3 -m pip install Jinja2==3.1.2
RUN python3 -m pip install empy==3.3.4
RUN python3 -m pip install PyYAML==6.0
RUN python3 -m pip install pyros-genmsg==0.5.8
RUN python3 -m pip install jsonschema==4.17.3
RUN python3 -m pip install toml==0.10.2
RUN python3 -m pip install pexpect==4.8.0
RUN python3 -m pip install MAVProxy==1.8.70
RUN python3 -m pip install scipy==1.10.1
RUN python3 -m pip install stable-baselines3==2.0.0
RUN python3 -m pip install sb3-contrib==2.0.0
RUN python3 -m pip install shimmy==1.2.1

WORKDIR /home/$USERNAME

# Create the AirSim directory structure (if still required)
RUN mkdir -p /home/$USERNAME/Documents/AirSim/

# Run as the new user.
USER $USERNAME

RUN git clone --recurse-submodules https://github.com/ArduPilot/ardupilot.git 

WORKDIR /home/$USERNAME/ardupilot

RUN chown -R ${user_id}:${group_id} /home/airsim_user/ardupilot/

RUN git checkout 4dc9d1ebc7405cf261b36ad6fd2a2e4bfd764ec3
RUN git submodule update --init --recursive
ENV SKIP_AP_EXT_ENV=$SKIP_AP_EXT_ENV SKIP_AP_GRAPHIC_ENV=$SKIP_AP_GRAPHIC_ENV SKIP_AP_COV_ENV=$SKIP_AP_COV_ENV SKIP_AP_GIT_CHECK=$SKIP_AP_GIT_CHECK
ENV USER=airsim_user

RUN ./Tools/environment_install/install-prereqs-ubuntu.sh -y

RUN pip3 install empy==3.3.4

COPY modified_ardupilot/AP_NavEKF3 /home/airsim_user/ardupilot/libraries/AP_NavEKF3
COPY modified_ardupilot/Rover /home/airsim_user/ardupilot/Rover

RUN sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 1

# Container start dir.
WORKDIR /home/$USERNAME

# Entrypoint command.
CMD /bin/bash